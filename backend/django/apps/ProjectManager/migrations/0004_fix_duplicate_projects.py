# Generated by Django 5.1.4 on 2025-02-03 20:26

from django.db import migrations, models

def deactivate_duplicate_projects(apps, schema_editor):
    Project = apps.get_model('ProjectManager', 'Project')
    
    # Get all active projects
    active_projects = Project.objects.filter(is_active=True)
    
    # Group projects by user and name
    seen_projects = {}
    for project in active_projects:
        key = (project.user_id, project.name)
        if key in seen_projects:
            # If we've seen this project name for this user before,
            # keep the most recently updated one active
            if project.updated_at > seen_projects[key].updated_at:
                seen_projects[key].is_active = False
                seen_projects[key].save()
                seen_projects[key] = project
            else:
                project.is_active = False
                project.save()
        else:
            seen_projects[key] = project

class Migration(migrations.Migration):

    dependencies = [
        ('ProjectManager', '0002_project_delete_userproject'),
    ]

    operations = [
        # First, run the Python code to deactivate duplicates
        migrations.RunPython(deactivate_duplicate_projects),
        
        # Then add the constraint
        migrations.AddConstraint(
            model_name='project',
            constraint=models.UniqueConstraint(
                fields=['user', 'name'],
                condition=models.Q(is_active=True),
                name='unique_active_project_name_per_user'
            ),
        ),
    ]
