#!/bin/bash

# Environment validation script for Django backend
# Validates required environment variables and configuration

set -e  # Exit on any error

echo "üîç Validating backend environment..."

# Configuration checks
VALIDATION_PASSED=true

# Check Python version
echo "üìã Environment information:"
echo "  - Python: $(python --version)"
echo "  - pip: $(pip --version)"

# Check if required files exist
echo "üîç Checking required files..."
if [ ! -f "manage.py" ]; then
    echo "‚ùå Error: manage.py not found!"
    VALIDATION_PASSED=false
fi

if [ ! -f "Pipfile" ]; then
    echo "‚ùå Error: Pipfile not found!"
    VALIDATION_PASSED=false
fi

if [ ! -f "Pipfile.lock" ]; then
    echo "‚ùå Error: Pipfile.lock not found!"
    VALIDATION_PASSED=false
fi

# Check critical environment variables
echo "üîç Checking required environment variables..."

if [ -z "$SECRET_KEY" ]; then
    echo "‚ùå Error: SECRET_KEY environment variable is required!"
    VALIDATION_PASSED=false
else
    echo "‚úÖ SECRET_KEY is set"
fi

if [ -z "$DATABASE_URL" ]; then
    echo "‚ö†Ô∏è  DATABASE_URL not set, will use SQLite default"
else
    echo "‚úÖ DATABASE_URL is set"
fi

# Check optional but important variables
echo "üîç Checking optional environment variables..."

if [ -n "$OPENAI_KEY" ]; then
    echo "‚úÖ OPENAI_KEY is set"
else
    echo "‚ö†Ô∏è  OPENAI_KEY not set (AI features may not work)"
fi

if [ -n "$STRIPE_SECRET_KEY" ]; then
    echo "‚úÖ STRIPE_SECRET_KEY is set"
else
    echo "‚ö†Ô∏è  STRIPE_SECRET_KEY not set (payments will not work)"
fi

if [ -n "$FRONTEND_URL" ]; then
    echo "‚úÖ FRONTEND_URL is set: $FRONTEND_URL"
else
    echo "‚ö†Ô∏è  FRONTEND_URL not set, using default"
fi

# Validate Django configuration
echo "üîç Validating Django configuration..."
if ! python manage.py check --deploy --quiet 2>/dev/null; then
    echo "‚ùå Django configuration check failed!"
    echo "‚ÑπÔ∏è  Run 'python manage.py check --deploy' for details"
    VALIDATION_PASSED=false
else
    echo "‚úÖ Django configuration is valid"
fi

# Final validation result
if [ "$VALIDATION_PASSED" = true ]; then
    echo "‚úÖ Environment validation passed!"
    exit 0
else
    echo "‚ùå Environment validation failed!"
    exit 1
fi 