server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    # Enhanced logging for Railway debugging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Serve static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # API request proxy to backend via Railway internal network
    location /api/ {
        # Enhanced logging for debugging Railway connection issues
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log debug;
        
        # Proxy to backend service via Railway internal networking
        # BACKEND_URL is substituted at container startup
        proxy_pass ${BACKEND_URL};
        
        # Standard proxy headers for Django with Railway optimizations
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # CRITICAL: Always set to 'https' since Railway terminates SSL at the edge
        # This prevents redirect loops when Django has SECURE_SSL_REDIRECT=True
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Frontend-Service "railway-nginx";
        
        # Railway-specific headers for debugging
        proxy_set_header X-Railway-Request-ID $request_id;
        proxy_set_header X-Railway-Frontend "frontend.railway.internal";
        
        # Handle preflight CORS requests - enhanced for Railway
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-CSRFToken,X-API-Client,X-Frontend-Environment' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain charset=UTF-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        # Handle streaming responses and prevent buffering
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
        proxy_cache off;
        
        # Enhanced timeouts for Railway network latency
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enhanced error handling for Railway debugging
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_error;
    }
    
    # Error handling for backend connection issues
    location @backend_error {
        add_header 'Content-Type' 'application/json' always;
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        return 502 '{"error":"Backend connection failed","detail":"Unable to connect to backend service","timestamp":"$time_iso8601"}';
    }

    # Handle admin requests (optional, for Django admin)
    location /admin/ {
        proxy_pass ${BACKEND_URL};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # CRITICAL: Always set to 'https' since Railway terminates SSL at the edge
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Railway-Frontend "frontend.railway.internal";
        
        # Timeouts for admin
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # SPA client-side routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Enhanced health check endpoint with Railway debugging
    location /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"frontend","environment":"railway","timestamp":"$time_iso8601","nginx_version":"$nginx_version"}';
    }
    
    # Backend health check proxy for debugging
    location /backend-health {
        proxy_pass ${BACKEND_URL}/api/v1/auth/health/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # CRITICAL: Always set to 'https' since Railway terminates SSL at the edge
        proxy_set_header X-Forwarded-Proto https;
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Add CORS for health check
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
    }
} 